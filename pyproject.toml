[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ephys-link"
dynamic = ["version"]
description = "A Python Socket.IO server that allows any Socket.IO-compliant application to communicate with manipulators used in electrophysiology experiments."
readme = "README.md"
requires-python = ">=3.10, <3.13"
license = "GPL-3.0-only"
keywords = ["socket-io", "manipulator", "electrophysiology", "ephys", "sensapex", "neuroscience", "neurotech", "virtualbrainlab", "new-scale"]
authors = [{ name = "Kenneth Yang", email = "kjy5@uw.edu" }]
maintainers = [{ name = "Kenneth Yang", email = "kjy5@uw.edu" }]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: Microsoft :: Windows",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
dependencies = [
    "aiohttp==3.9.5",
    "platformdirs==4.2.2",
    "pyserial==3.5",
    "python-socketio[asyncio_client]==5.11.2",
    "pythonnet==3.0.3",
    "requests==2.32.3",
    "sensapex==1.400.0",
    "vbl-aquarium==0.0.18"
]

[project.urls]
Documentation = "https://virtualbrainlab.org/ephys_link/installation_and_use.html"
Issues = "https://github.com/VirtualBrainLab/ephys-link/issues"
Source = "https://github.com/VirtualBrainLab/ephys-link"

[project.scripts]
ephys-link = "ephys_link.__main__:main"
ephys_link = "ephys_link.__main__:main"
el = "ephys_link.__main__:main"

[tool.hatch.version]
path = "src/ephys_link/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/.idea"]

[tool.hatch.envs.default]
python = "3.12"
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

#[[tool.hatch.envs.all.matrix]]
#python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.exe]
python = "3.12"
dependencies = [
    "pyinstaller",
]
[tool.hatch.envs.exe.scripts]
build = "pyinstaller.exe ephys_link.spec -y -- -d && pyinstaller.exe ephys_link.spec -y"
build_onefile = "pyinstaller.exe ephys_link.spec -y"
build_clean = "pyinstaller.exe ephys_link.spec -y --clean"

[tool.hatch.envs.types]
python = "3.12"
skip-install = true
dependencies = [
    "mypy",
]
[tool.hatch.envs.types.scripts]
check = "mypy --strict --install-types --non-interactive --ignore-missing-imports {args:src/ephys_link tests}"

[tool.coverage.run]
source_pkgs = ["ephys_link", "tests"]
branch = true
parallel = true
omit = [
    "src/ephys_link/__about__.py",
]

[tool.coverage.paths]
ephys_link = ["src/ephys_link", "*/ephys-link/src/ephys_link"]
tests = ["tests", "*/ephys-link/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]